services:
  db:
    image: postgres:latest

    container_name: ta-postgres

    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
        #PGDATA: /home/postgres/data #This item is not needed by default pgdata path 
      
    ports:
      - "5432:5432"                       # Expose PostgreSQL port

    volumes:
      - pgdata:/var/lib/postgresql/data
      #ssl file
      - ./ssl:/var/lib/postgresql/ssl
        #- ./ssl/server.crt:/var/lib/postgresql/ssl/server.crt
        #- ./ssl/server.key:/var/lib/postgresql/ssl/server.key
      - ./config/custom_postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./config/custom_pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - ./setup-ssl-key.sh:/docker-entrypoint-initdb.d/setup-ssl-key.sh
      #- pgdata:/home/postgres/data       #customed pgdata need PGDATA evironment sepecified

    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
      #option for .sh file
      #command: bash -c "chown postgres:postgres /var/lib/postgresql/ssl/server.key && chmod 0600 /var/lib/postgresql/ssl/server.key && chown postgres:postgres /var/lib/postgresql/ssl/server.crt && chmod 0644 /var/lib/postgresql/ssl/server.crt && postgres -c 'config_file=/etc/postgresql/postgresql.conf' && docker-entrypoint.sh postgres"

    user: postgres  # Ensure the container runs as the 'postgres' user, because sh file can not be run by root

    #containers on same vps can not communicate with each other without shared network
    networks:
      - docker-network

    restart: always                       # Automatically restart the container if it crashes

volumes:
  pgdata:                                  # Define volume for persistent data storage

networks: 
  docker-network:
    external: true

